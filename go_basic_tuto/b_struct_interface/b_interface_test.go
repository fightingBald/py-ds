package b_struct_interface

/*

在 Go 里：只要方法对得上，struct 就自动实现接口。
👉 好处：
使用方依赖接口，不依赖具体实现。
实现方不需要提前知道接口的存在。

Go 鼓励 小接口（只定义一两个方法），像 io.Reader、io.Writer。
小接口可以灵活组合，避免臃肿的大接口（Java 里经常见到）。
👉 好处：
用户只需要实现自己需要的最小功能。
函数参数可以要求非常精确的行为。

你写了一个新 struct，只要方法名对得上，就自然满足接口。
老接口调用处直接能用，不需要额外声明“我实现了这个接口”。
👉 举个例子：
你写了个新类型 KafkaReader，只要它有 Read 方法，它就自动是 io.Reader，你都不用 import io 包。
这就是所谓的 隐式接口实现。
*/
